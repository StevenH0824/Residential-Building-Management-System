#
### Necessary for h2 to work http://localhost:8081/h2-console/
##spring.h2.console.enabled=true
##spring.datasource.url = jdbc:h2:mem:testdb
#
#spring.application.name=buildingmanagement
#server.port=8081
#spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.show-sql=true
##spring.datasource.initialization-mode=embedded
#spring.datasource.data=classpath:data.sql
#spring.jpa.defer-datasource-initialization=true
#spring.sql.init.mode=always
#
#
#
#
#
##This functionality does not work yet, I'll check it later
##I want spring to restart if the database connection doesn't work
##spring.datasoruce.continue-on-error=true
##spring.datasource.validate-query=SELECT 1
##spring.datasource.max-wait=30000
#


spring.application.name=buildingmanagement

## Necessary for h2 to work http://localhost:8081/h2-console/
#spring.h2.console.enabled=true
#spring.datasource.url = jdbc:h2:mem:testdb
server.port=8080

# PostgreSQL connection settings
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=adesuwa

# Hibernate and JPA settings
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


# Data initialization settingsn
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always
spring.datasource.initialization-mode=always
